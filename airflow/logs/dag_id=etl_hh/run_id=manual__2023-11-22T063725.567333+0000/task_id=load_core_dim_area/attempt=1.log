[2023-11-22 06:37:36,760] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_area manual__2023-11-22T06:37:25.567333+00:00 [queued]>
[2023-11-22 06:37:36,788] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_area manual__2023-11-22T06:37:25.567333+00:00 [queued]>
[2023-11-22 06:37:36,789] {taskinstance.py:1376} INFO - 
--------------------------------------------------------------------------------
[2023-11-22 06:37:36,790] {taskinstance.py:1377} INFO - Starting attempt 1 of 2
[2023-11-22 06:37:36,791] {taskinstance.py:1378} INFO - 
--------------------------------------------------------------------------------
[2023-11-22 06:37:36,813] {taskinstance.py:1397} INFO - Executing <Task(PostgresOperator): load_core_dim_area> on 2023-11-22 06:37:25.567333+00:00
[2023-11-22 06:37:36,820] {standard_task_runner.py:52} INFO - Started process 431 to run task
[2023-11-22 06:37:36,824] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'etl_hh', 'load_core_dim_area', 'manual__2023-11-22T06:37:25.567333+00:00', '--job-id', '16', '--raw', '--subdir', 'DAGS_FOLDER/pipeline.py', '--cfg-path', '/tmp/tmpesff27r5', '--error-file', '/tmp/tmpcli1p4if']
[2023-11-22 06:37:36,825] {standard_task_runner.py:80} INFO - Job 16: Subtask load_core_dim_area
[2023-11-22 06:37:36,944] {task_command.py:371} INFO - Running <TaskInstance: etl_hh.load_core_dim_area manual__2023-11-22T06:37:25.567333+00:00 [running]> on host 9ac5eb002233
[2023-11-22 06:37:37,158] {taskinstance.py:1591} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=etl_hh
AIRFLOW_CTX_TASK_ID=load_core_dim_area
AIRFLOW_CTX_EXECUTION_DATE=2023-11-22T06:37:25.567333+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2023-11-22T06:37:25.567333+00:00
[2023-11-22 06:37:37,174] {base.py:68} INFO - Using connection ID 'my_db_conn' for task execution.
[2023-11-22 06:37:37,201] {dbapi.py:231} INFO - Running statement: 
        MERGE INTO core.dim_area AS trg
        USING(
            SELECT DISTINCT 
                area_id,
                area_name
            FROM staging.vacancy) AS src
        ON trg.area_id = src.area_id
        WHEN NOT MATCHED
        THEN INSERT(
            area_id,
            name)
        VALUES(
            src.area_id,
            src.area_name)
        WHEN MATCHED 
            AND (COALESCE(trg.name, '') <> COALESCE(src.area_name, '') 
            OR trg.area_id <> src.area_id )
        THEN UPDATE
        SET 
            area_id = src.area_id, 
            name = src.area_name, parameters: None
[2023-11-22 06:37:37,242] {taskinstance.py:1420} INFO - Marking task as SUCCESS. dag_id=etl_hh, task_id=load_core_dim_area, execution_date=20231122T063725, start_date=20231122T063736, end_date=20231122T063737
[2023-11-22 06:37:37,278] {local_task_job.py:156} INFO - Task exited with return code 0
[2023-11-22 06:37:37,395] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
