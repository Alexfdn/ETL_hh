[2023-11-21 15:09:20,507] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 15:09:20,544] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 15:09:20,545] {taskinstance.py:1376} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 15:09:20,546] {taskinstance.py:1377} INFO - Starting attempt 1 of 2
[2023-11-21 15:09:20,548] {taskinstance.py:1378} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 15:09:20,588] {taskinstance.py:1397} INFO - Executing <Task(PostgresOperator): load_core_dim_experience> on 2023-11-20 00:00:00+00:00
[2023-11-21 15:09:20,598] {standard_task_runner.py:52} INFO - Started process 1186 to run task
[2023-11-21 15:09:20,605] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'etl_hh', 'load_core_dim_experience', 'scheduled__2023-11-20T00:00:00+00:00', '--job-id', '257', '--raw', '--subdir', 'DAGS_FOLDER/pipeline.py', '--cfg-path', '/tmp/tmp77c4m0nh', '--error-file', '/tmp/tmpf6ick9rs']
[2023-11-21 15:09:20,606] {standard_task_runner.py:80} INFO - Job 257: Subtask load_core_dim_experience
[2023-11-21 15:09:20,767] {task_command.py:371} INFO - Running <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [running]> on host f44f09cebae7
[2023-11-21 15:09:20,947] {taskinstance.py:1591} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=etl_hh
AIRFLOW_CTX_TASK_ID=load_core_dim_experience
AIRFLOW_CTX_EXECUTION_DATE=2023-11-20T00:00:00+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2023-11-20T00:00:00+00:00
[2023-11-21 15:09:20,967] {base.py:68} INFO - Using connection ID 'my_db_conn' for task execution.
[2023-11-21 15:09:20,998] {dbapi.py:231} INFO - Running statement: 
        MERGE INTO core.dim_experience AS trg
        USING(
            SELECT DISTINCT 
                experience_id,
                experience_name
            FROM staging.vacancy) AS src
        ON trg.experience_id = src.experience_id
        WHEN NOT MATCHED
        THEN INSERT(
            experience_id,
            name)
        VALUES(
            src.experience_id,
            src.experience_name)
        WHEN MATCHED
                AND (COALESCE(trg.name, '') <> COALESCE(src.experience_name, '')
                OR COALESCE(trg.experience_id,'') <> COALESCE(src.experience_id,''))
        THEN UPDATE
        SET 
            experience_id = src.experience_id, 
            name = src.experience_name, parameters: None
[2023-11-21 15:09:21,098] {taskinstance.py:1420} INFO - Marking task as SUCCESS. dag_id=etl_hh, task_id=load_core_dim_experience, execution_date=20231120T000000, start_date=20231121T150920, end_date=20231121T150921
[2023-11-21 15:09:21,176] {local_task_job.py:156} INFO - Task exited with return code 0
[2023-11-21 15:09:21,302] {local_task_job.py:273} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2023-11-21 15:27:08,400] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 15:27:08,426] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 15:27:08,427] {taskinstance.py:1376} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 15:27:08,427] {taskinstance.py:1377} INFO - Starting attempt 1 of 2
[2023-11-21 15:27:08,428] {taskinstance.py:1378} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 15:27:08,471] {taskinstance.py:1397} INFO - Executing <Task(PostgresOperator): load_core_dim_experience> on 2023-11-20 00:00:00+00:00
[2023-11-21 15:27:08,481] {standard_task_runner.py:52} INFO - Started process 300 to run task
[2023-11-21 15:27:08,487] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'etl_hh', 'load_core_dim_experience', 'scheduled__2023-11-20T00:00:00+00:00', '--job-id', '273', '--raw', '--subdir', 'DAGS_FOLDER/pipeline.py', '--cfg-path', '/tmp/tmp1psk0z0u', '--error-file', '/tmp/tmp6heht5oi']
[2023-11-21 15:27:08,488] {standard_task_runner.py:80} INFO - Job 273: Subtask load_core_dim_experience
[2023-11-21 15:27:08,607] {task_command.py:371} INFO - Running <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [running]> on host b47ed23e9d21
[2023-11-21 15:27:08,770] {taskinstance.py:1591} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=etl_hh
AIRFLOW_CTX_TASK_ID=load_core_dim_experience
AIRFLOW_CTX_EXECUTION_DATE=2023-11-20T00:00:00+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2023-11-20T00:00:00+00:00
[2023-11-21 15:27:08,789] {base.py:68} INFO - Using connection ID 'my_db_conn' for task execution.
[2023-11-21 15:27:08,822] {dbapi.py:231} INFO - Running statement: 
        MERGE INTO core.dim_experience AS trg
        USING(
            SELECT DISTINCT 
                experience_id,
                experience_name
            FROM staging.vacancy) AS src
        ON trg.experience_id = src.experience_id
        WHEN NOT MATCHED
        THEN INSERT(
            experience_id,
            name)
        VALUES(
            src.experience_id,
            src.experience_name)
        WHEN MATCHED
                AND (COALESCE(trg.name, '') <> COALESCE(src.experience_name, '')
                OR COALESCE(trg.experience_id,'') <> COALESCE(src.experience_id,''))
        THEN UPDATE
        SET 
            experience_id = src.experience_id, 
            name = src.experience_name, parameters: None
[2023-11-21 15:27:08,870] {taskinstance.py:1420} INFO - Marking task as SUCCESS. dag_id=etl_hh, task_id=load_core_dim_experience, execution_date=20231120T000000, start_date=20231121T152708, end_date=20231121T152708
[2023-11-21 15:27:08,941] {local_task_job.py:156} INFO - Task exited with return code 0
[2023-11-21 15:27:09,039] {local_task_job.py:273} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2023-11-21 15:44:11,515] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 15:44:11,535] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 15:44:11,535] {taskinstance.py:1376} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 15:44:11,536] {taskinstance.py:1377} INFO - Starting attempt 1 of 2
[2023-11-21 15:44:11,536] {taskinstance.py:1378} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 15:44:11,557] {taskinstance.py:1397} INFO - Executing <Task(PostgresOperator): load_core_dim_experience> on 2023-11-20 00:00:00+00:00
[2023-11-21 15:44:11,564] {standard_task_runner.py:52} INFO - Started process 1052 to run task
[2023-11-21 15:44:11,568] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'etl_hh', 'load_core_dim_experience', 'scheduled__2023-11-20T00:00:00+00:00', '--job-id', '287', '--raw', '--subdir', 'DAGS_FOLDER/pipeline.py', '--cfg-path', '/tmp/tmp53f3_ans', '--error-file', '/tmp/tmpuj5pz08s']
[2023-11-21 15:44:11,569] {standard_task_runner.py:80} INFO - Job 287: Subtask load_core_dim_experience
[2023-11-21 15:44:11,662] {task_command.py:371} INFO - Running <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [running]> on host b47ed23e9d21
[2023-11-21 15:44:11,769] {taskinstance.py:1591} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=etl_hh
AIRFLOW_CTX_TASK_ID=load_core_dim_experience
AIRFLOW_CTX_EXECUTION_DATE=2023-11-20T00:00:00+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2023-11-20T00:00:00+00:00
[2023-11-21 15:44:11,782] {base.py:68} INFO - Using connection ID 'my_db_conn' for task execution.
[2023-11-21 15:44:11,805] {dbapi.py:231} INFO - Running statement: 
        MERGE INTO core.dim_experience AS trg
        USING(
            SELECT DISTINCT 
                experience_id,
                experience_name
            FROM staging.vacancy) AS src
        ON trg.experience_id = src.experience_id
        WHEN NOT MATCHED
        THEN INSERT(
            experience_id,
            name)
        VALUES(
            src.experience_id,
            src.experience_name)
        WHEN MATCHED
                AND (COALESCE(trg.name, '') <> COALESCE(src.experience_name, '')
                OR COALESCE(trg.experience_id,'') <> COALESCE(src.experience_id,''))
        THEN UPDATE
        SET 
            experience_id = src.experience_id, 
            name = src.experience_name, parameters: None
[2023-11-21 15:44:11,843] {taskinstance.py:1420} INFO - Marking task as SUCCESS. dag_id=etl_hh, task_id=load_core_dim_experience, execution_date=20231120T000000, start_date=20231121T154411, end_date=20231121T154411
[2023-11-21 15:44:11,901] {local_task_job.py:156} INFO - Task exited with return code 0
[2023-11-21 15:44:11,987] {local_task_job.py:273} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2023-11-21 16:02:56,752] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 16:02:56,785] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 16:02:56,786] {taskinstance.py:1376} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 16:02:56,787] {taskinstance.py:1377} INFO - Starting attempt 1 of 2
[2023-11-21 16:02:56,787] {taskinstance.py:1378} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 16:02:56,820] {taskinstance.py:1397} INFO - Executing <Task(PostgresOperator): load_core_dim_experience> on 2023-11-20 00:00:00+00:00
[2023-11-21 16:02:56,830] {standard_task_runner.py:52} INFO - Started process 1906 to run task
[2023-11-21 16:02:56,836] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'etl_hh', 'load_core_dim_experience', 'scheduled__2023-11-20T00:00:00+00:00', '--job-id', '298', '--raw', '--subdir', 'DAGS_FOLDER/pipeline.py', '--cfg-path', '/tmp/tmpzrsfmo70', '--error-file', '/tmp/tmp7vakwymh']
[2023-11-21 16:02:56,836] {standard_task_runner.py:80} INFO - Job 298: Subtask load_core_dim_experience
[2023-11-21 16:02:56,952] {task_command.py:371} INFO - Running <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [running]> on host b47ed23e9d21
[2023-11-21 16:02:57,109] {taskinstance.py:1591} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=etl_hh
AIRFLOW_CTX_TASK_ID=load_core_dim_experience
AIRFLOW_CTX_EXECUTION_DATE=2023-11-20T00:00:00+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2023-11-20T00:00:00+00:00
[2023-11-21 16:02:57,126] {base.py:68} INFO - Using connection ID 'my_db_conn' for task execution.
[2023-11-21 16:02:57,154] {dbapi.py:231} INFO - Running statement: 
        MERGE INTO core.dim_experience AS trg
        USING(
            SELECT DISTINCT 
                experience_id,
                experience_name
            FROM staging.vacancy) AS src
        ON trg.experience_id = src.experience_id
        WHEN NOT MATCHED
        THEN INSERT(
            experience_id,
            name)
        VALUES(
            src.experience_id,
            src.experience_name)
        WHEN MATCHED
                AND (COALESCE(trg.name, '') <> COALESCE(src.experience_name, '')
                OR COALESCE(trg.experience_id,'') <> COALESCE(src.experience_id,''))
        THEN UPDATE
        SET 
            experience_id = src.experience_id, 
            name = src.experience_name, parameters: None
[2023-11-21 16:02:57,232] {taskinstance.py:1420} INFO - Marking task as SUCCESS. dag_id=etl_hh, task_id=load_core_dim_experience, execution_date=20231120T000000, start_date=20231121T160256, end_date=20231121T160257
[2023-11-21 16:02:57,289] {local_task_job.py:156} INFO - Task exited with return code 0
[2023-11-21 16:02:57,377] {local_task_job.py:273} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2023-11-21 16:05:03,733] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 16:05:03,749] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 16:05:03,749] {taskinstance.py:1376} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 16:05:03,750] {taskinstance.py:1377} INFO - Starting attempt 1 of 2
[2023-11-21 16:05:03,750] {taskinstance.py:1378} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 16:05:03,769] {taskinstance.py:1397} INFO - Executing <Task(PostgresOperator): load_core_dim_experience> on 2023-11-20 00:00:00+00:00
[2023-11-21 16:05:03,775] {standard_task_runner.py:52} INFO - Started process 2017 to run task
[2023-11-21 16:05:03,780] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'etl_hh', 'load_core_dim_experience', 'scheduled__2023-11-20T00:00:00+00:00', '--job-id', '310', '--raw', '--subdir', 'DAGS_FOLDER/pipeline.py', '--cfg-path', '/tmp/tmp1_8y8vnl', '--error-file', '/tmp/tmpz5ayhlna']
[2023-11-21 16:05:03,780] {standard_task_runner.py:80} INFO - Job 310: Subtask load_core_dim_experience
[2023-11-21 16:05:03,865] {task_command.py:371} INFO - Running <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [running]> on host b47ed23e9d21
[2023-11-21 16:05:03,966] {taskinstance.py:1591} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=etl_hh
AIRFLOW_CTX_TASK_ID=load_core_dim_experience
AIRFLOW_CTX_EXECUTION_DATE=2023-11-20T00:00:00+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2023-11-20T00:00:00+00:00
[2023-11-21 16:05:03,978] {base.py:68} INFO - Using connection ID 'my_db_conn' for task execution.
[2023-11-21 16:05:04,000] {dbapi.py:231} INFO - Running statement: 
        MERGE INTO core.dim_experience AS trg
        USING(
            SELECT DISTINCT 
                experience_id,
                experience_name
            FROM staging.vacancy) AS src
        ON trg.experience_id = src.experience_id
        WHEN NOT MATCHED
        THEN INSERT(
            experience_id,
            name)
        VALUES(
            src.experience_id,
            src.experience_name)
        WHEN MATCHED
                AND (COALESCE(trg.name, '') <> COALESCE(src.experience_name, '')
                OR COALESCE(trg.experience_id,'') <> COALESCE(src.experience_id,''))
        THEN UPDATE
        SET 
            experience_id = src.experience_id, 
            name = src.experience_name, parameters: None
[2023-11-21 16:05:04,030] {taskinstance.py:1420} INFO - Marking task as SUCCESS. dag_id=etl_hh, task_id=load_core_dim_experience, execution_date=20231120T000000, start_date=20231121T160503, end_date=20231121T160504
[2023-11-21 16:05:04,071] {local_task_job.py:156} INFO - Task exited with return code 0
[2023-11-21 16:05:04,138] {local_task_job.py:273} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2023-11-21 16:14:23,944] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 16:14:23,968] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [queued]>
[2023-11-21 16:14:23,968] {taskinstance.py:1376} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 16:14:23,969] {taskinstance.py:1377} INFO - Starting attempt 1 of 2
[2023-11-21 16:14:23,970] {taskinstance.py:1378} INFO - 
--------------------------------------------------------------------------------
[2023-11-21 16:14:23,995] {taskinstance.py:1397} INFO - Executing <Task(PostgresOperator): load_core_dim_experience> on 2023-11-20 00:00:00+00:00
[2023-11-21 16:14:24,002] {standard_task_runner.py:52} INFO - Started process 2455 to run task
[2023-11-21 16:14:24,005] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'etl_hh', 'load_core_dim_experience', 'scheduled__2023-11-20T00:00:00+00:00', '--job-id', '326', '--raw', '--subdir', 'DAGS_FOLDER/pipeline.py', '--cfg-path', '/tmp/tmpjhmiu1um', '--error-file', '/tmp/tmpmww0zm92']
[2023-11-21 16:14:24,006] {standard_task_runner.py:80} INFO - Job 326: Subtask load_core_dim_experience
[2023-11-21 16:14:24,097] {task_command.py:371} INFO - Running <TaskInstance: etl_hh.load_core_dim_experience scheduled__2023-11-20T00:00:00+00:00 [running]> on host b47ed23e9d21
[2023-11-21 16:14:24,217] {taskinstance.py:1591} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=etl_hh
AIRFLOW_CTX_TASK_ID=load_core_dim_experience
AIRFLOW_CTX_EXECUTION_DATE=2023-11-20T00:00:00+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2023-11-20T00:00:00+00:00
[2023-11-21 16:14:24,230] {base.py:68} INFO - Using connection ID 'my_db_conn' for task execution.
[2023-11-21 16:14:24,256] {dbapi.py:231} INFO - Running statement: 
        MERGE INTO core.dim_experience AS trg
        USING(
            SELECT DISTINCT 
                experience_id,
                experience_name
            FROM staging.vacancy) AS src
        ON trg.experience_id = src.experience_id
        WHEN NOT MATCHED
        THEN INSERT(
            experience_id,
            name)
        VALUES(
            src.experience_id,
            src.experience_name)
        WHEN MATCHED
                AND (COALESCE(trg.name, '') <> COALESCE(src.experience_name, '')
                OR COALESCE(trg.experience_id,'') <> COALESCE(src.experience_id,''))
        THEN UPDATE
        SET 
            experience_id = src.experience_id, 
            name = src.experience_name, parameters: None
[2023-11-21 16:14:24,291] {taskinstance.py:1420} INFO - Marking task as SUCCESS. dag_id=etl_hh, task_id=load_core_dim_experience, execution_date=20231120T000000, start_date=20231121T161423, end_date=20231121T161424
[2023-11-21 16:14:24,337] {local_task_job.py:156} INFO - Task exited with return code 0
[2023-11-21 16:14:24,420] {local_task_job.py:273} INFO - 1 downstream tasks scheduled from follow-on schedule check
